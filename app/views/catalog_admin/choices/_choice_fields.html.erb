<%= locale_form_group(f, :short_name, :text_field, label: t('.short_name')) %>
<%= locale_form_group(f, :long_name, :text_field, label: t('.long_name_optional')) %>
<% unless f.object.choice_set.choice_set_type == 'datation' %>
  <%= choice_category_select(f, label: t('.category_optional')) %>
<% end %>

<%= f.hidden_field(:catalog_id, value: f.object.choice_set.catalog_id) %>

<% if f.object.choice_set.choice_set_type == 'datation' %>
  <%= f.form_group do %>
    <%= f.label :from_date, t('.from_date'), class: "form-label" %>
    <%= f.hidden_field(:from_date, {id: "from_date_#{f.object.choice_set.id}", "data-field-options": {format: f.object.choice_set.format}.to_json, "data-field-required": "true"}) %>
    <%= react_component('DateTimeInput/components/DateTimeInput', {input:"#from_date_#{f.object.choice_set.id}", preventNegativeInput: true, allowBC: f.object.choice_set.allow_bc  }) %>
  <% end %>
  <%= f.form_group do %>
    <%= f.label :to_date, t('.to_date'), class: "form-label" %>
    <%= f.hidden_field(:to_date, {id: "to_date_#{f.object.choice_set.id}", "data-field-options": {format: f.object.choice_set.format}.to_json, "data-field-required": "true"}) %>
    <%= react_component('DateTimeInput/components/DateTimeInput', {input: "#to_date_#{f.object.choice_set.id}", preventNegativeInput: true, allowBC: f.object.choice_set.allow_bc  }) %>
  <% end %>
<% end %>

<div class="base-errors"><%= f.object.errors.where(:base).first&.full_message %></div>
