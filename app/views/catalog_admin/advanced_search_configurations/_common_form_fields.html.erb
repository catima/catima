<%= locale_form_group(f, :title, :text_field, :autofocus => true) %>
<%= f.form_group do %>
  <%= f.label(:description, class: "form-label") %>
  <%= f.hidden_field(:description, value: @advanced_search_conf.description_str) %>
  <%= react_component(
        'TranslatedTextField/components/TranslatedTextField',
        {
          input: 'advanced_search_configuration_description',
          locales: @advanced_search_conf.catalog.valid_locales
        }) %>
<% end %>

<% if @advanced_search_conf.item_type.present? && @advanced_search_conf.item_type.include_geographic_field? %>
  <div id="searchType">
    <%= f.select(
          :search_type,
          AdvancedSearchConfiguration::TYPES,
          :label => t(".search_display_type")
        ) %>
  </div>

  <div id="searchLayers" style="display: none;">
    <%= f.form_group(
      :layers,
      label: {text: t(".layers")}
    ) do %>
      <%= f.hidden_field(:layers) %>
      <%= react_component('GeoEditor/components/GeoLayers',
                          {
                            layers: f.object.geo_layers,
                            options: load_geo_layers,
                            inputId: "advanced_search_configuration_layers",
                            placeholder: t("catalog_admin.fields.geometry_option_inputs.layers_component_placeholder"),
                            noOptionsMessage: t("catalog_admin.fields.geometry_option_inputs.layers_component_no_options")
                          }) %>
    <% end %>
    <%= f.form_group(
        :geofields,
        :help => t("catalog_admin.fields.geometry_option_inputs.geofields_help"),
    ) do %>
    <label class="form-label" for="advanced_search_configuration_geofields"><%= t("catalog_admin.fields.geometry_option_inputs.geofields") %></label>
    <%= f.hidden_field(:geofields) %>
    <%= react_component('GeoEditor/components/GeoFields',
      {
        defaults: f.object.geo_fields_as_fields.map { |f| { :label => f.name, :value => f.id } },
        inputId: "advanced_search_configuration_geofields",
        itemTypeId: f.object.item_type.id.to_s,
        placeholder: t("catalog_admin.fields.geometry_option_inputs.geofields_component_placeholder"),
        noOptionsMessage: t("catalog_admin.fields.geometry_option_inputs.geofields_component_no_options"),
        fetchUrl: catalog_admin_item_type_geofields_path(@catalog, item_types_id: "item_types_id")
      }) %>
      <% if f.object.errors[:geofields].any? %>
        <div class="text-danger my-1">
          <%= f.object.errors[:geofields].join(", ") %>
        </div>
      <% end %>
    <% end %>
  </div>
<% end %>
