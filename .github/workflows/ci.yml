name: ci
on: [push, pull_request]
jobs:
  build:
    name: RUBY${{ matrix.ruby-versions }}
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        ruby-versions: [ '2.7.5' ]

    env:
      CI: gha
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      RAILS_ENV: test

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis
        ports: ['6379:6379']
        options: --entrypoint redis-server

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-versions }}

      - name: Cache Gems
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Cache Yarn
        uses: actions/cache@v3
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install needed packages
        run: |
          sudo apt-get update
          sudo apt-get install -y imagemagick libsodium-dev libpq-dev

      - name: Build app
        id: app-build
        run: ruby bin/setup

      - name: Test app
        id: app-test
        run: NO_COVERAGE=1 rails test

  notification:
    name: Notify
    runs-on: ubuntu-latest
    needs: build
    if: always()
    continue-on-error: true

    steps:
      - uses: technote-space/workflow-conclusion-action@v3
      - uses: mikesprague/teams-incoming-webhook-action@v1
        with:
          github-token: ${{ github.token }}
          webhook-url: ${{ secrets.TEAMS_CI_WEBHOOK_URL }}
          deploy-card: true
          timezone: "Europe/Zurich"
          title: ${{ env.WORKFLOW_CONCLUSION }} (ci)
          color: ${{ env.WORKFLOW_CONCLUSION }}
