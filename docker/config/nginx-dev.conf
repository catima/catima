upstream catimas {
  server catima-app:8080;
}

server {
  listen 80 default_server;
  listen [::]:80 default_server;

  server_name localhost:9595;

  # Path for static files
  root /var/www/catima/public;

  client_max_body_size 4G;

  # ~2 seconds is often enough for most folks to parse HTML/CSS and
  # retrieve needed images/icons/frames, connections are cheap in
  # nginx so increasing this is generally safe...
  keepalive_timeout 5;

  # Far-future expires for fingerprinted assets
  location ~ "/assets/.*-[0-9a-f]{32}.*" {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  # Gzip for all assets
  location ~ ^/(assets)/ {
    gzip_static on;
    break;
  }

  # Prefer to serve static files directly from nginx to avoid unnecessary
  # data copies from the application server.
  try_files $uri/index.html $uri @catima;

  location @catima {
    # an HTTP header important enough to have its own Wikipedia entry:
    #   http://en.wikipedia.org/wiki/X-Forwarded-For
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # this helps Rack set the proper URL scheme for doing HTTPS redirects:
    proxy_set_header X-Forwarded-Proto $scheme;

    # pass the Host: header from the client right along so redirects
    # can be set properly within the Rack application
    proxy_set_header Host $http_host;

    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;

    # send_file support
    #proxy_set_header X-Sendfile-Type X-Accel-Redirect;
    #proxy_set_header X-Accel-Mapping /home/deployer/catima/releases/=/__send_file_accel/;

    # enable caching
    add_header Cache-Control public;

    proxy_pass http://catimas;
  }

  # Rails error pages
  error_page 500 502 503 504 /500.html;
  location = /500.html {
    root /var/www/catima/public;
  }
}
