version: "2.4"

networks:
  catima-net:
    driver: bridge

name: catima

services:
  catima-app:
    image: unillett/catima:latest-app
    build:
      context: ./
      dockerfile: ./docker/app.dockerfile
      target: dev
    env_file:
      - ./docker/.env
    ports:
      - "8383:3000"
      - "1234:1234"
    depends_on:
      catima-postgres:
        condition: service_healthy
      catima-redis:
        condition: service_healthy
    volumes:
      - ./:/var/www/catima
    networks:
      - catima-net
    healthcheck:
      test: curl --fail http://127.0.0.1:3000/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10m
    container_name: catima-app
  catima-worker:
    image: unillett/catima:latest-worker
    build:
      context: ./
      dockerfile: ./docker/worker.dockerfile
      target: dev
    env_file:
      - ./docker/.env
    depends_on:
      catima-postgres:
        condition: service_healthy
      catima-redis:
        condition: service_healthy
      catima-app:
        condition: service_healthy
    volumes_from:
      - catima-app
    networks:
      - catima-net
    container_name: catima-worker
  catima-postgres:
    image: postgis/postgis:12-3.3
    env_file:
      - ./docker/.env
    ports:
      - "127.0.0.1:5410:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/config/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - catima-net
    healthcheck:
      test: pg_isready -U docker -h 127.0.0.1
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    container_name: catima-postgres
  catima-redis:
    image: "redis:5"
    env_file:
      - ./docker/.env
    expose:
      - "6379"
    command: redis-server
    volumes:
      - redis-data:/data
    networks:
      - catima-net
    healthcheck:
      test: redis-cli ping
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    container_name: catima-redis
  catima-mailhog:
    image: mailhog/mailhog:latest
    expose:
      - "1025"
    ports:
      - "127.0.0.1:8028:8025"
    networks:
      - catima-net
    container_name: catima-mailhog

volumes:
  redis-data:
  postgres-data:
